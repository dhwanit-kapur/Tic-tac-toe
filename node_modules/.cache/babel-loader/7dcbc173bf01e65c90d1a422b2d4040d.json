{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dhwanitkapur/Desktop/ReactLCO/tictactoe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Icon from \"./Icon\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  _s();\n\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"Circle\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0, 9);\n  };\n\n  const checkIsWinner = () => {//\n  };\n\n  const changeItem = itemNumber => {\n    if (winMessage) {\n      return toast(winMessage, {\n        type: \"success\"\n      });\n    }\n\n    if (itemArray[itemNumber] === \"empty\") {\n      if (isCross) {\n        itemArray[itemNumber] = \"cross\";\n      } else {\n        itemArray[itemNumber] = \"circle\";\n      }\n\n      setIsCross(!isCross);\n    } else {\n      return toast(\"This box is already filled!\", {\n        type: \"error\"\n      });\n    }\n\n    checkIsWinner();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"offset-md-3\",\n        children: [winMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-uppercase text-center text-success\",\n            children: winMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            block: true,\n            onClick: reloadGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-warning\",\n          children: [isCross ? \"Cross\" : \"Circle\", \"'s turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: itemArray.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hJZn2Y/bOu4bmA9HufMkwSxNI3o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dhwanitkapur/Desktop/ReactLCO/tictactoe/src/App.js"],"names":["React","useState","Icon","ToastContainer","toast","Card","CardBody","Container","Button","Col","Row","itemArray","Array","fill","App","isCross","setIsCross","winMessage","setWinMessage","reloadGame","checkIsWinner","changeItem","itemNumber","type","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Icon from \"./Icon\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { Card, CardBody, Container, Button, Col, Row } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\n\nconst itemArray = new Array(9).fill(\"empty\");\n\nconst App = () => {\n  const [isCross, setIsCross] = useState(false);\n  const [winMessage, setWinMessage] = useState(\"Circle\");\n\n  const reloadGame = () => {\n    setIsCross(false);\n    setWinMessage(\"\");\n    itemArray.fill(\"empty\", 0, 9);\n  };\n\n  const checkIsWinner = () => {\n    //\n  };\n\n  const changeItem = itemNumber => {\n    if (winMessage){\n      return toast(winMessage, { type : \"success\"})\n    }\n\n    if (itemArray[itemNumber] === \"empty\"){\n      if (isCross){\n        itemArray[itemNumber] = \"cross\";\n      }\n      else{\n        itemArray[itemNumber] = \"circle\";\n      }\n      setIsCross(!isCross);\n    }\n    else{\n      return toast(\"This box is already filled!\", { type : \"error\"})\n    }\n\n    checkIsWinner();\n  };\n\n  return (\n    <Container className=\"p-5\">\n      <ToastContainer position=\"bottom-center\" />\n      <Row>\n        <Col md={6} className=\"offset-md-3\">\n          { winMessage ? (\n            <div className=\"mb-2 mt-2\">\n              <h1 className=\"text-uppercase text-center text-success\">{winMessage}</h1>\n              <Button color=\"success\" block onClick={reloadGame}></Button>\n            </div>\n          ) : (\n            <h1 className=\"text-center text-warning\">{ isCross ? \"Cross\" : \"Circle\" }'s turn</h1>\n          ) }\n          <div className=\"grid\">\n            {itemArray.map((item, index) => (\n              <Card key={index}>\n                <CardBody className=\"box\">\n                  <Icon name={item} />\n                </CardBody>\n              </Card>\n            ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}